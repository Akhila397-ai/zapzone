<%- include('../../views/partials/admin/header') %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Products</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <style>
        /* Admin Products Page Styles */
        :root {
            --primary-color: #6B6AE4;
            --primary-dark: #5655c6;
            --secondary-color: #2D3047;
            --text-dark: #333;
            --text-light: #495057;
            --background-light: #f8f9fa;
            --white: #fff;
            --danger: #dc3545;
            --success: #28a745;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: #f1f3f5;
        }

        .content-main {
            padding-left: 260px; /* Adjusted to match sidebar width + 20px gap */
            padding-right: 20px;
            padding-top: 80px; /* Adjusted to account for fixed header */
            min-height: calc(100vh - 70px);
            transition: all 0.3s ease;
        }

        .content-header {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .content-title {
            font-size: 24px;
            font-weight: 600;
            color: var(--text-dark);
        }

        /* Card Styles */
        .card {
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            margin-bottom: 20px;
            background-color: var(--white);
            border: none;
            overflow: hidden;
        }

        .card-header {
            background-color: var(--background-light);
            border-bottom: 1px solid #e9ecef;
            padding: 1rem;
        }

        /* Search Section */
        .div-sec {
            display: flex;
            justify-content: space-between;
            align-items: center;
            text-align: center;
            border-radius: 15px;
            background-color: var(--primary-color);
            height: auto;
            padding: 1.5rem 2rem;
        }

        .input-group {
            border-radius: 6px;
            overflow: hidden;
            max-width: 500px;
            border: 1px solid #dfe6e9;
            background-color: var(--white);
        }

        .input-group input {
            height: 45px;
            font-size: 14px;
            border: none;
            padding-left: 15px;
        }

        .input-group .btn {
            padding: 8px 16px;
            background-color: var(--background-light);
            border-color: var(--background-light);
            color: var(--primary-color);
            font-weight: 500;
        }

        .input-group .btn:hover {
            background-color: #e9ecef;
        }

        .add-product-btn {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            padding: 10px 20px;
            font-weight: 500;
            border-radius: 7px;
            color: var(--white);
            text-decoration: none;
            display: inline-block;
            transition: all 0.3s ease;
        }

        .add-product-btn:hover {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(107, 106, 228, 0.2);
            color: var(--white);
        }

        /* Table Styles */
        .table-container {
            overflow-x: auto;
            border-radius: 0 0 12px 12px;
        }

        .table {
            margin-bottom: 0;
            width: 100%;
            border-collapse: collapse;
        }

        .table thead th {
            background-color: var(--background-light);
            font-weight: 600;
            color: var(--text-light);
            font-size: 14px;
            padding: 15px;
            text-align: left;
            vertical-align: middle;
            white-space: nowrap;
        }

        .table tbody td {
            vertical-align: middle;
            padding: 15px;
            font-size: 14px;
            color: var(--text-dark);
            border-bottom: 1px solid #eee;
        }

        .table tbody tr:last-child td {
            border-bottom: none;
        }

        .table tbody td img {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 8px;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(107, 106, 228, 0.05);
        }

        /* Product Name Column */
        .col-product-name {
            min-width: 180px;
            word-break: break-word;
        }

        /* Price Column */
        .col-price {
            text-align: right;
            font-weight: 500;
        }

        /* Quantity Column */
        .col-quantity {
            text-align: center;
            font-weight: 500;
        }

        /* Action Buttons */
        .action-btn {
            padding: 6px 12px;
            font-size: 13px;
            border-radius: 6px;
            font-weight: 500;
            min-width: 80px;
            text-align: center;
            text-decoration: none;
            color: var(--white);
            display: inline-block;
            margin: 0 2px;
            transition: all 0.2s ease;
        }

        .btn-block {
            background-color: var(--danger);
        }

        .btn-block:hover {
            background-color: #c82333;
            color: var(--white);
        }

        .btn-unblock {
            background-color: var(--success);
        }

        .btn-unblock:hover {
            background-color: #218838;
            color: var(--white);
        }

        .btn-edit {
            background-color: #17a2b8;
        }

        .btn-edit:hover {
            background-color: #138496;
            color: var(--white);
        }

        .btn-delete {
            background-color: #e74c3c;
        }

        .btn-delete:hover {
            background-color: #c0392b;
            color: var(--white);
        }

        .action-col {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 5px;
        }

        /* Pagination Styles */
        .pagination-container {
            display: flex;
            justify-content: center;
            margin: 25px 0;
            flex-wrap: wrap;
        }

        .pagination-container a, .pagination-container span {
            padding: 8px 12px;
            margin: 0 4px;
            border-radius: 6px;
            font-size: 14px;
            text-decoration: none;
            min-width: 38px;
            text-align: center;
            transition: all 0.2s ease;
        }

        .pagination-container a {
            background-color: var(--white);
            color: var(--primary-color);
            border: 1px solid #dee2e6;
        }

        .pagination-container a:hover {
            background-color: #e9ecef;
            border-color: var(--primary-color);
        }

        .pagination-container .current-page {
            background-color: var(--primary-color);
            color: var(--white);
            border: 1px solid var(--primary-color);
        }

        /* No products message */
        .no-products {
            text-align: center;
            padding: 30px;
            color: var(--text-light);
            font-size: 16px;
        }

        /* Responsive Styles for sidebar collapse integration */
        @media (max-width: 992px) {
            .content-main {
                padding-left: 20px;
                padding-top: 90px;
            }
            
            .content-main.sidebar-collapsed {
                padding-left: 100px;
            }
        }

        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .content-main {
                padding-left: 15px;
                padding-right: 15px;
                padding-top: 80px;
            }
            
            .content-header {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }
            
            .content-title {
                font-size: 22px;
            }
            
            .add-product-btn {
                width: 100%;
                text-align: center;
            }
            
            .div-sec {
                flex-direction: column;
                height: auto;
                padding: 1.5rem;
                gap: 15px;
            }
            
            .input-group {
                max-width: 100%;
            }
            
            .action-btn {
                min-width: 70px;
                font-size: 12px;
                padding: 5px 10px;
            }
        }

        @media (max-width: 576px) {
            .content-main {
                padding: 75px 10px 10px 10px;
            }
            
            .content-title {
                font-size: 20px;
            }
            
            .card-header {
                padding: 0.75rem;
            }
            
            .div-sec {
                padding: 1rem;
                border-radius: 10px;
            }
            
            .table thead th,
            .table tbody td {
                padding: 10px 8px;
                font-size: 12px;
            }
            
            .action-btn {
                min-width: 60px;
                font-size: 11px;
                padding: 4px 8px;
                margin-bottom: 3px;
            }
            
            .table tbody td img {
                width: 40px;
                height: 40px;
            }
            
            .pagination-container a, 
            .pagination-container span {
                padding: 6px 10px;
                margin: 0 2px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
    <section class="content-main">
        <div class="content-header">
            <h2 class="content-title">Products</h2>
            <a href="/admin/load-add-product" class="add-product-btn">
                <i class="bi bi-plus-circle"></i> Add Product
            </a>
        </div>

        <div class="card">
            <div class="card-header">
                <form action="" method="get" class="w-100">
                    <div class="div-sec">
                        <div class="input-group shadow-sm w-100">
                            <input type="text" class="form-control" placeholder="Search products or brands" name="search" value="<%= search || '' %>">
                            <button class="btn" type="submit">
                                <i class="bi bi-search"></i> Search
                            </button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="table-container">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th class="col-product-name">Product Name</th>
                            <th class="col-image">Image</th>
                            <th class="col-brand">Brand</th>
                            <th class="col-category">Category</th>
                            <th class="col-price">Sale Price</th>
                            <th class="col-quantity">Quantity</th>
                            <th class="col-action">Status</th>
                            <th class="col-action">Edit</th>
                            <th class="col-action">Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (data && data.length > 0) { %>
                            <% for (let i = data.length - 1; i >= 0; i--) { 
                                let product = data[i]; %>
                                <tr>
                                    <td class="col-product-name"><%= product.productName %></td>
                                    <td class="col-image">
                                        <img src="/Uploads/product-images/<%= product.productImage && product.productImage.length > 0 ? product.productImage[0] : 'default-product.jpg' %>" 
                                             alt="<%= product.productName || 'Product Image' %>" 
                                             onerror="this.src='/img/default-product.jpg';">
                                    </td>
                                    <td class="col-brand"><%= product.brand.name || 'N/A' %></td>
                                    <td class="col-category"><%= product.category ? product.category.name : 'N/A' %></td>
                                    <td class="col-price">₹<%= product.salePrice.toFixed(2) %></td>
                                    <td class="col-quantity"><%= product.quantity %></td>
                                    <td class="col-action">
                                        <div class="action-col">
                                            <% if (product.isBlocked) { %>
                                                <a href="javascript:void(0)" class="action-btn btn-unblock" 
                                                   onclick="confirmUserAction('<%= product._id %>', 'unblock')">Unblock</a>
                                            <% } else { %>
                                                <a href="javascript:void(0)" class="action-btn btn-block" 
                                                   onclick="confirmUserAction('<%= product._id %>', 'block')">Block</a>
                                            <% } %>
                                        </div>
                                    </td>
                                    <td class="col-action">
                                        <div class="action-col">
                                            <a href="/admin/editProduct?id=<%= product._id %>" class="action-btn btn-edit">
                                                <i class="bi bi-pencil"></i> Edit
                                            </a>
                                        </div>
                                    </td>
                                    <td class="col-action">
                                        <div class="action-col">
                                            <a href="javascript:void(0)" class="action-btn btn-delete" 
                                               onclick="confirmDeleteProduct('<%= product._id %>')">
                                                <i class="bi bi-trash"></i> Delete
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            <% } %>
                        <% } else { %>
                            <tr>
                                <td colspan="9" class="no-products">
                                    <i class="bi bi-exclamation-circle"></i> No products found
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <div class="pagination-container">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %><%= search ? '&search=' + encodeURIComponent(search) : '' %>" aria-label="Previous page">« Prev</a>
            <% } %>
            <% 
                const maxPagesToShow = 5;
                let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
                let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
                if (endPage - startPage + 1 < maxPagesToShow) {
                    startPage = Math.max(1, endPage - maxPagesToShow + 1);
                }
            %>
            <% if (startPage > 1) { %>
                <a href="?page=1<%= search ? '&search=' + encodeURIComponent(search) : '' %>">1</a>
                <% if (startPage > 2) { %>
                    <span>...</span>
                <% } %>
            <% } %>
            <% for(let i = startPage; i <= endPage; i++) { %>
                <% if (i === currentPage) { %>
                    <span class="current-page"><%= i %></span>
                <% } else { %>
                    <a href="?page=<%= i %><%= search ? '&search=' + encodeURIComponent(search) : '' %>"><%= i %></a>
                <% } %>
            <% } %>
            <% if (endPage < totalPages) { %>
                <% if (endPage < totalPages - 1) { %>
                    <span>...</span>
                <% } %>
                <a href="?page=<%= totalPages %><%= search ? '&search=' + encodeURIComponent(search) : '' %>"><%= totalPages %></a>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %><%= search ? '&search=' + encodeURIComponent(search) : '' %>" aria-label="Next page">Next »</a>
            <% } %>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sidebar = document.querySelector('.sidebar');
            const mainContent = document.querySelector('.content-main');
            
            // Function to handle responsive layout based on sidebar state
            function updateLayout() {
                // Check if the sidebar has a 'collapsed' class
                if (window.innerWidth > 992) {
                    if (sidebar && sidebar.classList.contains('collapsed')) {
                        mainContent.style.paddingLeft = '100px'; // For collapsed sidebar
                    } else {
                        mainContent.style.paddingLeft = '260px'; // For expanded sidebar
                    }
                } else {
                    // On mobile view
                    mainContent.style.paddingLeft = '20px';
                    
                    // Check for mobile sidebar visibility
                    if (sidebar && sidebar.classList.contains('mobile-visible')) {
                        document.body.style.overflow = 'hidden'; // Prevent background scrolling
                    } else {
                        document.body.style.overflow = 'auto';
                    }
                }
            }
            
            // Initial layout setup
            updateLayout();
            
            // Listen for sidebar toggle events
            const sidebarToggle = document.querySelector('.sidebar-toggle');
            if (sidebarToggle) {
                sidebarToggle.addEventListener('click', function() {
                    setTimeout(updateLayout, 50); // Short delay to ensure DOM has updated
                });
            }
            
            // Listen for window resize
            window.addEventListener('resize', updateLayout);
            
            // If there's a sidebar mutation observer already in place, we can hook into it
            // This is optional and depends on your existing sidebar implementation
            if (window.MutationObserver) {
                const observer = new MutationObserver(function(mutations) {
                    updateLayout();
                });
                
                if (sidebar) {
                    observer.observe(sidebar, { attributes: true, attributeFilter: ['class'] });
                }
            }
        });

        async function confirmUserAction(productId, action) {
            const result = await Swal.fire({
                title: `${action.charAt(0).toUpperCase() + action.slice(1)} Product?`,
                text: `Do you want to ${action} this product?`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: action === 'block' ? '#dc3545' : '#28a745',
                cancelButtonColor: '#6c757d',
                confirmButtonText: `Yes, ${action} it`,
                cancelButtonText: 'Cancel',
                buttonsStyling: true,
                customClass: {
                    confirmButton: 'btn btn-lg',
                    cancelButton: 'btn btn-lg'
                }
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/${action}-product?id=${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        Swal.fire({
                            title: "Success!",
                            text: `Product has been ${action}ed successfully`,
                            icon: "success",
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            title: "Error",
                            text: `Failed to ${action} product. Please try again.`,
                            icon: "error"
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        title: "Error",
                        text: "An unexpected error occurred. Please try again later.",
                        icon: "error"
                    });
                }
            }
        }

        async function confirmDeleteProduct(productId) {
            const deleteResult = await Swal.fire({
                title: "Delete Product?",
                text: "This product will be removed from the system. This action cannot be undone.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#e74c3c",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Yes, delete it",
                cancelButtonText: "Cancel",
                buttonsStyling: true,
                customClass: {
                    confirmButton: 'btn btn-lg',
                    cancelButton: 'btn btn-lg'
                }
            });

            if (deleteResult.isConfirmed) {
                try {
                    const response = await fetch(`/admin/deleteProduct/${productId}`, {
                        method: "PATCH",
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });

                    const data = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            title: "Deleted!",
                            text: "Product has been successfully removed.",
                            icon: "success",
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            title: "Error",
                            text: data.message || `Error deleting product (${response.status})`,
                            icon: "error"
                        });
                    }
                } catch (error) {
                    console.error("Error deleting product:", error);
                    Swal.fire({
                        title: "Error",
                        text: "Network or server error occurred. Please try again later.",
                        icon: "error"
                    });
                }
            }
        }
    </script>
</body>
</html>