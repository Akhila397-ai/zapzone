<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Success</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
        }
        
        .order-container {
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 800px;
        }
        
        .success-header {
            background-color: #007bff;
            color: white;
            padding: 30px 20px;
            text-align: center;
            position: relative;
        }
        
        .success-icon {
            background-color: white;
            color: #007bff;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            position: absolute;
            top: 20px;
            left: 20px;
            font-weight: bold;
        }
        
        .order-content {
            padding: 20px;
        }
        
        .order-detail {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding: 5px 0;
        }
        
        .order-status {
            margin: 30px 0;
        }
        
        .status-line {
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
            margin-top: 40px;
        }
        
        .status-line::before {
            content: '';
            position: absolute;
            height: 2px;
            background-color: #e0e0e0;
            width: 100%;
            top: 50%;
            z-index: 1;
        }
        
        .status-step {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background-color: #e0e0e0;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 2;
            position: relative;
        }
        
        .status-step.active {
            background-color: #4CAF50;
            color: white;
        }
        
        .status-label {
            position: absolute;
            top: 40px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 12px;
            white-space: nowrap;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #e0e0e0;
        }
        
        th {
            background-color: #f8f8f8;
        }
        
        .total-row {
            font-weight: bold;
        }
        
        .discount-row {
            color: #666;
        }
        
        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }
        
        .btn {
            padding: 10px 15px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            font-size: 14px;
            display: flex;
            align-items: center;
            text-decoration: none;
        }
        
        .btn-primary {
            background-color: #007bff;
            color: white;
        }
        
        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }
        
        .btn i {
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="order-container">
        <div class="success-header">
            <div class="success-icon">‚úì</div>
            <h2>Order Successful!</h2>
            <p>Thank you for your purchase.</p>
        </div>
        
        <div class="order-content">
            <div class="order-detail">
                <span>Order ID:</span>
                <span><%= order.orderId %></span>
            </div>
            <div class="order-detail">
                <span>Order Date:</span>
                <span><%= order.createdOn ? new Date(order.createdOn).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) : 'N/A' %></span>
            </div>
            <div class="order-detail">
                <span>Status:</span>
                <span><%= order.status || 'Pending' %></span>
            </div>
            <div class="order-detail">
                <span>Payment Method:</span>
                <span><%= order.paymentMethod || 'Cash on Delivery' %></span>
            </div>
            <div class="order-detail">
                <span>Order Type:</span>
                <span><%= order.orderType || 'COD' %></span>
            </div>
            
            <div class="order-status">
                <h3>Order Status</h3>
                <div class="status-line">
                    <div class="status-step <%= order.status === 'pending' ? 'active' : '' %>">
                        <%= order.status === 'pending' ? '‚úì' : '' %>
                        <div class="status-label">Order Placed</div>
                    </div>
                    <div class="status-step <%= order.status === 'processing' ? 'active' : '' %>">
                        <%= order.status === 'processing' ? '‚úì' : '' %>
                        <div class="status-label">Processing</div>
                    </div>
                    <div class="status-step <%= order.status === 'Shipped' ? 'active' : '' %>">
                        <%= order.status === 'Shipped' ? '‚úì' : '' %>
                        <div class="status-label">Shipped</div>
                    </div>
                    <div class="status-step <%= order.status === 'Delivered' ? 'active' : '' %>">
                        <%= order.status === 'Delivered' ? '‚úì' : '' %>
                        <div class="status-label">Delivered</div>
                    </div>
                </div>
            </div>
            
            <div class="order-items">
                <h3>Order Items</h3>
                <table>
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (order.orderedItems && order.orderedItems.length > 0) { %>
                            <% order.orderedItems.forEach(item => { %>
                                <tr>
                                    <td><%= item.product.productName %></td>
                                    <td><%= item.quantity %></td>
                                    <td>‚Çπ<%= item.price.toFixed(2) %></td>
                                    <td>‚Çπ<%= (item.price * item.quantity).toFixed(2) %></td>
                                </tr>
                            <% }) %>
                            <tr class="discount-row">
                                <td colspan="3">Subtotal:</td>
                                <td>‚Çπ<%= order.totalPrice ? order.totalPrice.toFixed(2) : '0.00' %></td>
                            </tr>
                            <tr class="discount-row">
                                <td colspan="3">Coupon Discount:</td>
                                <td>‚Çπ<%= order.couponApplied && order.discount ? order.discount.toFixed(2) : '0.00' %></td>
                            </tr>
                            <tr class="discount-row">
                                <td colspan="3">Offer Discount:</td>
                                <td>‚Çπ<%= order.discount && !order.couponApplied ? order.discount.toFixed(2) : '0.00' %></td>
                            </tr>
                            <tr class="discount-row">
                                <td colspan="3">Shipping Charge:</td>
                                <td>‚Çπ50.00</td>
                            </tr>
                            <tr class="total-row">
                                <td colspan="3">Total:</td>
                                <td>‚Çπ<%= order.finalAmount ? (order.finalAmount + 50).toFixed(2) : '50.00' %></td>
                            </tr>
                        <% } else { %>
                            <tr>
                                <td colspan="4">No items found in this order.</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
            <div class="action-buttons">
                <!-- Download Invoice -->
                <a href="javascript:void(0)" onclick="downloadInvoice()" class="btn btn-primary">
                    <i>‚¨áÔ∏è</i> Download Invoice
                </a>
            
                <!-- Continue Shopping -->
                <a href="/shop" class="btn btn-secondary">
                    <i>üõí</i> Continue Shopping
                </a>
            
                <!-- View Order Details -->
                <a href="/orders/<%= order.orderId %>" class="btn btn-secondary">
                    <i>üëÅÔ∏è</i> View Order Details
                </a>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Trigger confetti effect on page load
            confetti({
                particleCount: 100,
                spread: 70,
                origin: { y: 0.6 },
                colors: ['#007bff', '#4CAF50', '#FFD700', '#FF4500'],
                duration: 3000
            });
        });

        function downloadInvoice() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Parse order data from JSON
            const order = JSON.parse('<%- JSON.stringify(order) %>');

            // Default values to prevent undefined errors
            const defaults = {
                orderId: 'N/A',
                createdOn: 'N/A',
                status: 'Pending',
                paymentMethod: 'Cash on Delivery',
                orderType: 'COD',
                totalPrice: 0.00,
                couponApplied: false,
                discount: 0.00,
                finalAmount: 0.00,
                orderedItems: []
            };
            const safeOrder = { ...defaults, ...order };

            // Format order date
            const orderDate = safeOrder.createdOn
                ? new Date(safeOrder.createdOn).toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                  })
                : 'N/A';

            // Header
            doc.setFillColor(0, 123, 255);
            doc.rect(0, 0, 210, 40, 'F');
            doc.setTextColor(255, 255, 255);
            doc.setFontSize(20);
            doc.text('Invoice', 105, 20, { align: 'center' });
            doc.setFontSize(12);
            doc.text(`Order ID: ${safeOrder.orderId}`, 105, 30, { align: 'center' });

            // Order Details
            doc.setTextColor(0, 0, 0);
            doc.setFontSize(14);
            doc.text('Order Details', 20, 50);
            doc.setFontSize(10);
            doc.text(`Order Date: ${orderDate}`, 20, 60);
            doc.text(`Status: ${safeOrder.status}`, 20, 70);
            doc.text(`Payment Method: ${safeOrder.paymentMethod}`, 20, 80);
            doc.text(`Order Type: ${safeOrder.orderType}`, 20, 90);

            // Order Items Table
            doc.setFontSize(14);
            doc.text('Order Items', 20, 110);
            doc.setFontSize(10);

            // Table headers
            const headers = ['Product', 'Quantity', 'Price', 'Total'];
            const colWidths = [100, 30, 30, 30];
            let x = 20;
            headers.forEach((header, i) => {
                doc.text(header, x, 120, { align: i > 0 ? 'right' : 'left' });
                x += colWidths[i];
            });

            // Table rows
            let y = 130;
            if (safeOrder.orderedItems && safeOrder.orderedItems.length > 0) {
                safeOrder.orderedItems.forEach(item => {
                    const productName = item.product && item.product.productName ? item.product.productName : 'Unknown';
                    const quantity = item.quantity || 0;
                    const price = item.price ? parseFloat(item.price).toFixed(2) : '0.00';
                    const total = (parseFloat(item.price || 0) * (item.quantity || 0)).toFixed(2);

                    x = 20;
                    doc.text(productName, x, y, { width: colWidths[0] });
                    doc.text(quantity.toString(), x + colWidths[0], y, { align: 'right' });
                    doc.text(`‚Çπ${price}`, x + colWidths[0] + colWidths[1], y, { align: 'right' });
                    doc.text(`‚Çπ${total}`, x + colWidths[0] + colWidths[1] + colWidths[2], y, { align: 'right' });
                    y += 10;
                });

                // Summary
                y += 10;
                doc.text('Subtotal:', 140, y, { align: 'right' });
                doc.text(`‚Çπ${parseFloat(safeOrder.totalPrice).toFixed(2)}`, 180, y, { align: 'right' });
                y += 10;
                doc.text('Coupon Discount:', 140, y, { align: 'right' });
                doc.text(`‚Çπ${safeOrder.couponApplied && safeOrder.discount ? parseFloat(safeOrder.discount).toFixed(2) : '0.00'}`, 180, y, { align: 'right' });
                y += 10;
                doc.text('Offer Discount:', 140, y, { align: 'right' });
                doc.text(`‚Çπ${!safeOrder.couponApplied && safeOrder.discount ? parseFloat(safeOrder.discount).toFixed(2) : '0.00'}`, 180, y, { align: 'right' });
                y += 10;
                doc.text('Shipping Charge:', 140, y, { align: 'right' });
                doc.text('‚Çπ50.00', 180, y, { align: 'right' });
                y += 10;
                doc.setFont('helvetica', 'bold');
                doc.text('Total:', 140, y, { align: 'right' });
                doc.text(`‚Çπ${parseFloat(safeOrder.finalAmount + 50).toFixed(2)}`, 180, y, { align: 'right' });
            } else {
                doc.text('No items found in this order.', 20, y);
            }

            // Footer
            doc.setFont('helvetica', 'normal');
            doc.setTextColor(0, 123, 255);
            doc.setFontSize(10);
            doc.text('Thank you for your purchase!', 105, y + 20, { align: 'center' });

            // Save the PDF
            doc.save(`invoice_${safeOrder.orderId}.pdf`);
        }
    </script>
</body>
</html>